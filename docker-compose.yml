version: '3'
services:
  omar-config-server:
    image: quay.io/radiantsolutions/omar-config-server:latest
    env_file:
      - envs/omar-config-server.env
    volumes:
      - ./spring-configs:/home/omar/configs
    networks:
      - proxynet
      - omarnet

  omar-eureka-server:
    image: quay.io/radiantsolutions/omar-eureka-server:latest
    env_file:
      - envs/omar-eureka-server.env
    networks:
      - proxynet
      - omarnet

  services:
    image: quay.io/radiantsolutions/omar-services-app:latest
    env_file:
      - envs/omar-.env
    volumes:
      - ./sanfrancisco:/data/sanfrancisco
      - ./elevation:/data/elevation
      - ./application_services.yml:/home/omar/application.yml
    networks:
      - proxynet
      - omarnet
    depends_on:
      - database

  tlv:
    image: quay.io/radiantsolutions/tlv-app:latest
    env_file:
      - envs/tlv.env
    volumes:
      - ./application_tlv.yml:/home/omar/application.yml
    networks:
      - proxynet
      - omarnet
    depends_on:
      - services
      - twofishes

  twofishes:
    image: quay.io/radiantsolutions/omar-twofishes:latest
    env_file:
      - envs/omar-twofishes.env
    networks:
      - proxynet
      - omarnet
    depends_on:
      - services
      - database

  ui:
    image: quay.io/radiantsolutions/omar-ui-app:latest
    env_file:
      - envs/omar-ui.env
    volumes:
      - ./application_ui.yml:/home/omar/application.yml
    networks:
      - proxynet
      - omarnet
    depends_on:
      - services

  database:
    image: quay.io/radiantsolutions/postgres-postgis-trgm:latest
    env_file:
      - envs/omar-postgres.env
    volumes:
      - ./pgdata:/var/lib/postgresql/data/pgdata
    networks:
      - proxynet
      - omarnet

#  apache:
#    image: httpd:latest
#    networks:
#      - proxynet
#      - omarnet
#    restart: always
#    ports:
#      - 80:80
#    volumes:
#      - ./httpd.conf:/usr/local/apache2/conf/httpd.conf
#      - ./o2-proxy.conf:/usr/local/apache2/conf/o2-proxy.conf

#  nginx:
#    image: nginx:latest
#    networks:
#      - proxynet
#    restart: always
#    ports:
#      - 80:80
#    volumes:
#      - ./nginx.conf:/etc/nginx/conf.d/default.conf
#    depends_on:
#      - ui

networks:
  proxynet:
    name: proxynet
  omarnet:
    external: false
